openapi: 3.0.3
info:
  title: Zero-TOTP Admin API
  description: API for the Zero-TOTP Admin application
  version: "1.0"
servers:
  - url: /api/v1
security:
  - cookieAuth: []
paths:
  /stats/users/category:
    get:
      operationId: controllers.stats.get_users_per_category
      tags:
        - Stats
      summary: Return users' statistics per category
      responses:
        "200": # status code
          description: Return users' statistics per category
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_users:
                    type: integer
                    description: Total number of users
                    example: 100
                  verified_users:
                    type: integer
                    description: Total number of verified users
                    example: 80
                  blocked_users:
                    type: integer
                    description: Total number of blocked users
                    example: 10

        "401":
          description: Unauthorized
        "403":
          description: Access denied

  /stats/users/timechart:
    get:
      operationId: controllers.stats.get_user_timechart
      tags:
        - Stats
      summary: Return new users' statistics
      responses:
        "200": # status code
          description: Return new users' statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_users_per_months:
                    type: object
                    description: New users per month
                    example: {
                      "2021-01-01": 10,
                      "2021-02-01": 20,
                      "2021-03-01": 30
                    }
        "401":
          description: Unauthorized
        "403":
          description: Access denied
  
  /stats/server/rate-limiting:
    get:
      operationId: controllers.stats.get_rate_limiting
      tags:
        - Stats
      summary: Return rate limiting statistics
      responses:
        "200": # status code
          description: Return rate limiting statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip_rate_limited:
                    type: number
                    description: IP rate limited
                    example: 10
                  user_rate_limited:
                    type: number
                    description: User rate limited
                    example: 20
        "401":
          description: Unauthorized
        "403":
          description: Access denied
  /login:
    post:
      security: []
      operationId: controllers.auth.login
      tags:
        - Auth
      summary: Login to the application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username
                password:
                  type: string
                  description: Password
              required:
                  - username
                  - password
      responses:
        "200": 
          description: Login successful
        "400":
          description: Invalid request
        "403":
          description: Login failed
  /whoami:
    get:
      operationId: controllers.auth.whoami
      tags:
        - Auth
      summary: Return the current user
      responses:
        "200": 
          description: Return the current user
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Username
                    example: admin
        "401":
          description: Not authenticated
        "403":
          description: Access denied
  /logout:
     post:
      operationId: controllers.auth.logout
      tags:
        - Auth
      summary: Logout from the application
      responses:
        "200": 
          description: Logout successful
        "401":
          description: Not authenticated
        "403":
          description: Access denied
  /users/all:
    get:
      operationId: controllers.users.get_all_users
      tags:
        - Users
      summary: Return all users
      responses:
        "200": 
          description: Return all users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          description: Username
                          example: admin
                        email:
                          type: string
                          description: Email
                          example: user@example.com
                        id: 
                          type: number
                          description: User ID
                          example: 1
                        isVerified:
                          type: boolean
                          description: User verification status
                          example: true
                        isBlocked:
                          type: boolean
                          description: User block status
                          example: false
                        signup_date:
                          type: string
                          description: Signup date
                          example: "2021-01-01"
                        total_of_2fa:
                          type: number
                          description: Total number of 2FA registered
                          example: 2
                        is_google_drive_enabled:
                          type: boolean
                          description: Google Drive status
                          example: true
  /users/{user_id}:
    get:
      operationId: controllers.users.get_user_by_id
      tags:
        - Users
      summary: Return a user
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        "200": 
          description: Return a user
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Username
                    example: admin
                  email:
                    type: string
                    description: Email
                    example: user@example.com
                  id: 
                    type: number
                    description: User ID
                    example: 1
                  isVerified:
                    type: boolean
                    description: User verification status
                    example: true
                  isBlocked:
                    type: boolean
                    description: User block status
                    example: false
                  signup_date:
                    type: string
                    description: Signup date
                    example: "2021-01-01"
                  total_of_2fa:
                    type: number
                    description: Total number of 2FA registered
                    example: 2
                  is_google_drive_enabled:
                    type: boolean
                    description: Google Drive status
                    example: true
    delete:
      operationId: controllers.users.delete_user
      tags:
        - Users
      summary: Delete a user
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        "200": 
          description: User deleted
        "400":
          description: Invalid request
        "403":
          description: Access denied 
  /users/block/{user_id}:
    put:
      operationId: controllers.users.block_user
      tags:
        - Users
      summary: Block a user
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        "201": 
          description: User blocked
        "400":
          description: Invalid request
        "403":
          description: Access denied
  /users/unblock/{user_id}:
    put:
      operationId: controllers.users.unblock_user
      tags:
        - Users
      summary: Unblock a user
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        "201": 
          description: User unblocked
        "400":
          description: Invalid request
        "403":
          description: Access denied
  /notification/{notif_id}:
    get:
      operationId: controllers.notifications.get_notification_by_id
      tags:
        - Notifications
      summary: Return a notification
      parameters:
        - name: notif_id
          in: path
          required: true
          description: Notification id 
          schema:
            type: string
      responses:
        "200": 
          description: Return a user
          content:
            application/json:
              schema:
                type: object
                properties:
                      id:
                        type: string
                        description: Notification ID
                        example: 9f4bc3c8-49aa-4e52-80d5-8334f85964d2
                      message:
                        type: string
                        description: Notification message
                        example: "An ongoing maintenance"
                      timestamp:
                        type: number
                        description: Notification creation date.  UNIX timestamp is expected
                        example: 1724102799
                      expiration_timestamp:
                        type: number
                        description: Notification expiration date. UNIX timestamp is expected
                        example: 1724102799
                      auth_user_only:
                        type: boolean
                        description: Notification for authenticated users only
                        example: true
                      enabled:
                        type: boolean
                        description: Notification status
                        example: true
        "404":
          description: Notification not found
        "403":
          description: Access denied
    put:
      operationId: controllers.notifications.update_notification
      tags:
        - Notifications
      summary: Update a notification. Empty fields will be ignored.
      parameters:
        - name: notif_id
          in: path
          required: true
          description: Notification id 
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Notification message
                expiration_timestamp_utc:
                  type: number
                  description: Notification expiration date.  UNIX timestamp is expected
                auth_user_only:
                  type: boolean
                  description: Notification for authenticated users only
                enabled:
                  type: boolean
                  description: Notification status
      responses:
        "201": 
          description: Notification updated
        "400":
          description: Invalid request
        "403":
          description: Access denied
    delete:
      operationId: controllers.notifications.delete_notification
      tags:
        - Notifications
      summary: Delete a notification
      parameters:
        - name: notif_id
          in: path
          required: true
          description: Notification id 
          schema:
            type: string
      responses:
        "200": 
          description: Notification deleted
        "400":
          description: Invalid request
        "403":
          description: Access denied
  /notifications/all:
    get:
      operationId: controllers.notifications.get_all_notifications
      tags:
        - Notifications
      summary: Return all notifications
      responses:
        "200": 
          description: Return all notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Notification ID
                          example: 9f4bc3c8-49aa-4e52-80d5-8334f85964d2
                        message:
                          type: string
                          description: Notification message
                          example: "An ongoing maintenance"
                        timestamp:
                          type: number
                          description: Notification creation date.  UNIX timestamp is expected
                          example: 1724102799
                        expiration_timestamp:
                          type: number
                          description: Notification expiration date. UNIX timestamp is expected
                          example: 1724102799
                        auth_user_only:
                          type: boolean
                          description: Notification for authenticated users only
                          example: true
                        enabled:
                          type: boolean
                          description: Notification status
                          example: true
        "403":
          description: Access denied
  /notification: 
    post: 
      operationId: controllers.notifications.create_notification
      tags:
        - Notifications
      summary: Create a notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Notification message
                expiration_timestamp_utc:
                  type: number
                  description: Notification expiration date .  UNIX timestamp is expected
                auth_user_only:
                  type: boolean
                  description: Notification for authenticated users only (default false)
                enabled:
                  type: boolean
                  description: Notification status (default false)
              required:
                  - message
      responses:
        "201": 
          description: Notification created
          content:
            application/json:
              schema:
                type: object
                properties:
                      id:
                        type: string
                        description: Notification ID
                        example: 9f4bc3c8-49aa-4e52-80d5-8334f85964d2
                      message:
                        type: string
                        description: Notification message
                        example: "An ongoing maintenance"
                      timestamp:
                        type: number
                        description: Notification creation date  UNIX timestamp is expected
                        example: 1724102799
                      expiration_timestamp:
                        type: number
                        description: Notification expiration date  UNIX timestamp is expected
                        example: 1724102799
                      auth_user_only:
                        type: boolean
                        description: Notification for authenticated users only
                        example: true
                      enabled:
                        type: boolean
                        description: Notification status
                        example: true
        "400":
          description: Invalid request
        "403":
          description: Access denied
                        

components:
  securitySchemes:
    cookieAuth:       
      type: apiKey
      in: cookie
      name: session_id  
      x-apikeyInfoFunc: security.session_verification.verify_session

